# Eliminate extra white spaces
docs <- tm_map(docs, stripWhitespace)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing = TRUE)
d <- data.frame(word = names(v),freq = v)
head(d, 10)
set.seed(1234)
cloud <- wordcloud(words = d$word, freq = d$freq, min.freq = 1,
max.words = 200, random.order = FALSE, rot.per = 0.35,
colors = brewer.pal(8, "Dark2"))
jpeg("cloud.jpg", width = 1000, height = 1000, bg = "white")
# Load
library("tm")
library("SnowballC")
library("wordcloud")
library("RColorBrewer")
# Read the text file from internet
filePath <- ("./words.txt")
text <- readLines(filePath)
# Load the data as a corpus
mycorpus <- VCorpus(
x = VectorSource(text),
readerControl = list(reader = readPlain,
language = "fr"))
docs <- tm_map(mycorpus, removeWords, stopwords())
toSpace <- content_transformer(function(x , pattern ) gsub(pattern, " ", x))
docs <- tm_map(docs, toSpace, "/")
docs <- tm_map(docs, toSpace, "@")
docs <- tm_map(docs, toSpace, "\\|")
# Convert the text to lower case
docs <- tm_map(docs, content_transformer(tolower))
# Remove numbers
docs <- tm_map(docs, removeNumbers)
# Remove french common stopwords
docs <- tm_map(docs, removeWords, stopwords("french"))
# Remove punctuations
docs <- tm_map(docs, removePunctuation)
# Eliminate extra white spaces
docs <- tm_map(docs, stripWhitespace)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing = TRUE)
d <- data.frame(word = names(v),freq = v)
head(d, 10)
set.seed(1234)
cloud <- wordcloud(words = d$word, freq = d$freq, min.freq = 1,
max.words = 200, random.order = FALSE, rot.per = 0.35,
colors = brewer.pal(8, "Dark2"))
jpeg("./cloud.jpg", width = 1000, height = 1000, bg = "white")
# Load
library("tm")
library("SnowballC")
library("wordcloud")
library("RColorBrewer")
# Read the text file from internet
filePath <- ("./words.txt")
text <- readLines(filePath)
# Load the data as a corpus
mycorpus <- VCorpus(
x = VectorSource(text),
readerControl = list(reader = readPlain,
language = "fr"))
docs <- tm_map(mycorpus, removeWords, stopwords())
toSpace <- content_transformer(function(x , pattern ) gsub(pattern, " ", x))
docs <- tm_map(docs, toSpace, "/")
docs <- tm_map(docs, toSpace, "@")
docs <- tm_map(docs, toSpace, "\\|")
# Convert the text to lower case
docs <- tm_map(docs, content_transformer(tolower))
# Remove numbers
docs <- tm_map(docs, removeNumbers)
# Remove french common stopwords
docs <- tm_map(docs, removeWords, stopwords("french"))
# Remove punctuations
docs <- tm_map(docs, removePunctuation)
# Eliminate extra white spaces
docs <- tm_map(docs, stripWhitespace)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing = TRUE)
d <- data.frame(word = names(v),freq = v)
head(d, 10)
jpeg(filename = "./cloud.jpg")
set.seed(1234)
cloud <- wordcloud(words = d$word, freq = d$freq, min.freq = 1,
max.words = 200, random.order = FALSE, rot.per = 0.35,
colors = brewer.pal(8, "Dark2"))
dev.off()
# Load
library("tm")
library("SnowballC")
library("wordcloud")
library("RColorBrewer")
# Read the text file from internet
filePath <- ("./words.txt")
text <- readLines(filePath)
# Load the data as a corpus
mycorpus <- VCorpus(
x = VectorSource(text),
readerControl = list(reader = readPlain,
language = "fr"))
docs <- tm_map(mycorpus, removeWords, stopwords())
toSpace <- content_transformer(function(x , pattern ) gsub(pattern, " ", x))
docs <- tm_map(docs, toSpace, "/")
docs <- tm_map(docs, toSpace, "@")
docs <- tm_map(docs, toSpace, "\\|")
# Convert the text to lower case
docs <- tm_map(docs, content_transformer(tolower))
# Remove numbers
docs <- tm_map(docs, removeNumbers)
# Remove french common stopwords
docs <- tm_map(docs, removeWords, stopwords("french"))
# Remove punctuations
docs <- tm_map(docs, removePunctuation)
# Eliminate extra white spaces
docs <- tm_map(docs, stripWhitespace)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing = TRUE)
d <- data.frame(word = names(v),freq = v)
head(d, 10)
jpeg(filename = "C://Users/Megaport/Desktop/cloud.jpg")
set.seed(1234)
cloud <- wordcloud(words = d$word, freq = d$freq, min.freq = 1,
max.words = 200, random.order = FALSE, rot.per = 0.35,
colors = brewer.pal(8, "Dark2"))
dev.off()
# Load
library("tm")
library("SnowballC")
library("wordcloud")
library("RColorBrewer")
# Read the text file from internet
filePath <- ("./words.txt")
text <- readLines(filePath)
# Load the data as a corpus
mycorpus <- VCorpus(
x = VectorSource(text),
readerControl = list(reader = readPlain,
language = "fr"))
docs <- tm_map(mycorpus, removeWords, stopwords())
toSpace <- content_transformer(function(x , pattern ) gsub(pattern, " ", x))
docs <- tm_map(docs, toSpace, "/")
docs <- tm_map(docs, toSpace, "@")
docs <- tm_map(docs, toSpace, "\\|")
# Convert the text to lower case
docs <- tm_map(docs, content_transformer(tolower))
# Remove numbers
docs <- tm_map(docs, removeNumbers)
# Remove french common stopwords
docs <- tm_map(docs, removeWords, stopwords("french"))
# Remove punctuations
docs <- tm_map(docs, removePunctuation)
# Eliminate extra white spaces
docs <- tm_map(docs, stripWhitespace)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing = TRUE)
d <- data.frame(word = names(v),freq = v)
head(d, 10)
jpeg(filename = "./cloud.jpg")
set.seed(1234)
cloud <- wordcloud(words = d$word, freq = d$freq, min.freq = 1,
max.words = 200, random.order = FALSE, rot.per = 0.35,
colors = brewer.pal(8, "Dark2"))
dev.off()
# Load
library("tm")
library("SnowballC")
library("wordcloud")
library("RColorBrewer")
# Read the text file from internet
filePath <- ("./words.txt")
text <- readLines(filePath)
# Load the data as a corpus
mycorpus <- VCorpus(
x = VectorSource(text),
readerControl = list(reader = readPlain,
language = "fr"))
docs <- tm_map(mycorpus, removeWords, stopwords())
toSpace <- content_transformer(function(x , pattern ) gsub(pattern, " ", x))
docs <- tm_map(docs, toSpace, "/")
docs <- tm_map(docs, toSpace, "@")
docs <- tm_map(docs, toSpace, "\\|")
# Convert the text to lower case
docs <- tm_map(docs, content_transformer(tolower))
# Remove numbers
docs <- tm_map(docs, removeNumbers)
# Remove french common stopwords
docs <- tm_map(docs, removeWords, stopwords("french"))
# Remove punctuations
docs <- tm_map(docs, removePunctuation)
# Eliminate extra white spaces
docs <- tm_map(docs, stripWhitespace)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing = TRUE)
d <- data.frame(word = names(v),freq = v)
head(d, 10)
jpeg(filename = "C://Users/Megaport/Desktop/cloud.jpg")
set.seed(1234)
cloud <- wordcloud(words = d$word, freq = d$freq, min.freq = 1,
max.words = 200, random.order = FALSE, rot.per = 0.35,
colors = brewer.pal(8, "Dark2"))
dev.off()
# Load
library("tm")
library("SnowballC")
library("wordcloud")
library("RColorBrewer")
# Read the text file from internet
filePath <- ("E://backup_data_files/words.txt")
text <- readLines(filePath)
# Load the data as a corpus
mycorpus <- VCorpus(
x = VectorSource(text),
readerControl = list(reader = readPlain,
language = "fr"))
docs <- tm_map(mycorpus, removeWords, stopwords())
toSpace <- content_transformer(function(x , pattern ) gsub(pattern, " ", x))
docs <- tm_map(docs, toSpace, "/")
docs <- tm_map(docs, toSpace, "@")
docs <- tm_map(docs, toSpace, "\\|")
# Convert the text to lower case
docs <- tm_map(docs, content_transformer(tolower))
# Remove numbers
docs <- tm_map(docs, removeNumbers)
# Remove french common stopwords
docs <- tm_map(docs, removeWords, stopwords("french"))
# Remove punctuations
docs <- tm_map(docs, removePunctuation)
# Eliminate extra white spaces
docs <- tm_map(docs, stripWhitespace)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing = TRUE)
d <- data.frame(word = names(v),freq = v)
head(d, 10)
jpeg(filename = "C://Users/Megaport/Desktop/cloud.jpg")
set.seed(1234)
cloud <- wordcloud(words = d$word, freq = d$freq, min.freq = 1,
max.words = 200, random.order = FALSE, rot.per = 0.35,
colors = brewer.pal(8, "Dark2"))
dev.off()
# Load
library("tm")
library("SnowballC")
library("wordcloud")
library("RColorBrewer")
# Read the text file from internet
filePath <- ("E://backup_data_files/words.txt")
text <- readLines(filePath)
# Load the data as a corpus
mycorpus <- VCorpus(
x = VectorSource(text),
readerControl = list(reader = readPlain,
language = "fr"))
docs <- tm_map(mycorpus, removeWords, stopwords())
toSpace <- content_transformer(function(x , pattern ) gsub(pattern, " ", x))
docs <- tm_map(docs, toSpace, "/")
docs <- tm_map(docs, toSpace, "@")
docs <- tm_map(docs, toSpace, "\\|")
# Convert the text to lower case
docs <- tm_map(docs, content_transformer(tolower))
# Remove numbers
docs <- tm_map(docs, removeNumbers)
# Remove french common stopwords
docs <- tm_map(docs, removeWords, stopwords("french"))
# Remove punctuations
docs <- tm_map(docs, removePunctuation)
# Eliminate extra white spaces
docs <- tm_map(docs, stripWhitespace)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing = TRUE)
d <- data.frame(word = names(v),freq = v)
head(d, 10)
jpeg(filename = "E://backup_data_files/cloud.jpg")
set.seed(1234)
cloud <- wordcloud(words = d$word, freq = d$freq, min.freq = 1,
max.words = 200, random.order = FALSE, rot.per = 0.35,
colors = brewer.pal(8, "Dark2"))
dev.off()
# Load
library("tm")
library("SnowballC")
library("wordcloud")
library("RColorBrewer")
# Read the text file from internet
filePath <- ("E://backup_data_files/words.txt")
text <- readLines(filePath)
# Load the data as a corpus
mycorpus <- VCorpus(
x = VectorSource(text),
readerControl = list(reader = readPlain,
language = "fr"))
docs <- tm_map(mycorpus, removeWords, stopwords())
toSpace <- content_transformer(function(x , pattern ) gsub(pattern, " ", x))
docs <- tm_map(docs, toSpace, "/")
docs <- tm_map(docs, toSpace, "@")
docs <- tm_map(docs, toSpace, "\\|")
# Convert the text to lower case
docs <- tm_map(docs, content_transformer(tolower))
# Remove numbers
docs <- tm_map(docs, removeNumbers)
# Remove french common stopwords
docs <- tm_map(docs, removeWords, stopwords("french"))
# Remove punctuations
docs <- tm_map(docs, removePunctuation)
# Eliminate extra white spaces
docs <- tm_map(docs, stripWhitespace)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing = TRUE)
d <- data.frame(word = names(v),freq = v)
head(d, 10)
jpeg(filename = "E://backup_data_files/cloud.jpg", width = 1000, height = 1000)
set.seed(1234)
cloud <- wordcloud(words = d$word, freq = d$freq, min.freq = 1,
max.words = 200, random.order = FALSE, rot.per = 0.35,
colors = brewer.pal(8, "Dark2"))
dev.off()
View(mycorpus)
install.packages("rJava")
library("rJava")
install.packages("svglite")
# Load the libraries
library("tm")
library("SnowballC")
library("wordcloud")
library("RColorBrewer")
library("stringi")
library("svglite")
# set the working directory
# first line in for windows / second line is for GNU/Linux
setwd("E://backup_data_files/JavaProjects/poleEmploi/ressources/")
#setwd("/mnt/e/backup_data_files/JavaProjects/poleEmploi/ressources/")
# read the words file
filePath <- ("./words.txt")
text <- readLines(filePath)
# Load the data as a corpus
# first line in for windows / second line is for GNU/Linux
corpus <- VCorpus(x = VectorSource(text), readerControl = list(reader = readPlain, language = "fr"))
#corpus <- Corpus(VectorSource(text))
docs <- tm_map(corpus, removeWords, stopwords())
toSpace <- content_transformer(function(x , pattern ) gsub(pattern, " ", x))
docs <- tm_map(docs, toSpace, "/")
docs <- tm_map(docs, toSpace, "@")
docs <- tm_map(docs, toSpace, "\\|")
# replace non-convertible bytes in the corpus with strings showing their hex codes
# also subtily convert the text to lower case
docs <- tm_map(docs, content_transformer(stri_trans_tolower))
# Remove numbers
docs <- tm_map(docs, removeNumbers)
# Remove french common stopwords
docs <- tm_map(docs, removeWords, stopwords("french"))
# Remove punctuations
docs <- tm_map(docs, removePunctuation)
# Eliminate extra white spaces
docs <- tm_map(docs, stripWhitespace)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing = TRUE)
d <- data.frame(word = names(v),freq = v)
head(d, 10)
svglite(file = "./cloud.jpg", width = 1000, height = 1000)
#jpeg(filename = "./cloud.jpg")
set.seed(1234)
wordcloud(words = d$word, freq = d$freq, min.freq = 1,
max.words = 200, random.order = FALSE, rot.per = 0.35,
colors = brewer.pal(8, "Dark2"))
dev.off()
# Load the libraries
library("tm")
library("SnowballC")
library("wordcloud")
library("RColorBrewer")
library("stringi")
library("svglite")
# set the working directory
# first line in for windows / second line is for GNU/Linux
setwd("E://backup_data_files/JavaProjects/poleEmploi/ressources/")
#setwd("/mnt/e/backup_data_files/JavaProjects/poleEmploi/ressources/")
# read the words file
filePath <- ("./words.txt")
text <- readLines(filePath)
# Load the data as a corpus
# first line in for windows / second line is for GNU/Linux
corpus <- VCorpus(x = VectorSource(text), readerControl = list(reader = readPlain, language = "fr"))
#corpus <- Corpus(VectorSource(text))
docs <- tm_map(corpus, removeWords, stopwords())
toSpace <- content_transformer(function(x , pattern ) gsub(pattern, " ", x))
docs <- tm_map(docs, toSpace, "/")
docs <- tm_map(docs, toSpace, "@")
docs <- tm_map(docs, toSpace, "\\|")
# replace non-convertible bytes in the corpus with strings showing their hex codes
# also subtily convert the text to lower case
docs <- tm_map(docs, content_transformer(stri_trans_tolower))
# Remove numbers
docs <- tm_map(docs, removeNumbers)
# Remove french common stopwords
docs <- tm_map(docs, removeWords, stopwords("french"))
# Remove punctuations
docs <- tm_map(docs, removePunctuation)
# Eliminate extra white spaces
docs <- tm_map(docs, stripWhitespace)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing = TRUE)
d <- data.frame(word = names(v),freq = v)
head(d, 10)
#svglite(file = "./cloud.svg", width = 1000, height = 1000)
jpeg(filename = "./cloud.jpg")
set.seed(1234)
wordcloud(words = d$word, freq = d$freq, min.freq = 1,
max.words = 200, random.order = FALSE, rot.per = 0.35,
colors = brewer.pal(8, "Dark2"))
dev.off()
# Load the libraries
library("tm")
library("SnowballC")
library("wordcloud")
library("RColorBrewer")
library("stringi")
library("svglite")
# set the working directory
# first line in for windows / second line is for GNU/Linux
setwd("E://backup_data_files/JavaProjects/poleEmploi/ressources/")
#setwd("/mnt/e/backup_data_files/JavaProjects/poleEmploi/ressources/")
# read the words file
filePath <- ("./words.txt")
text <- readLines(filePath)
# Load the data as a corpus
# first line in for windows / second line is for GNU/Linux
corpus <- VCorpus(x = VectorSource(text), readerControl = list(reader = readPlain, language = "fr"))
#corpus <- Corpus(VectorSource(text))
docs <- tm_map(corpus, removeWords, stopwords())
toSpace <- content_transformer(function(x , pattern ) gsub(pattern, " ", x))
docs <- tm_map(docs, toSpace, "/")
docs <- tm_map(docs, toSpace, "@")
docs <- tm_map(docs, toSpace, "\\|")
# replace non-convertible bytes in the corpus with strings showing their hex codes
# also subtily convert the text to lower case
docs <- tm_map(docs, content_transformer(stri_trans_tolower))
# Remove numbers
docs <- tm_map(docs, removeNumbers)
# Remove french common stopwords
docs <- tm_map(docs, removeWords, stopwords("french"))
# Remove punctuations
docs <- tm_map(docs, removePunctuation)
# Eliminate extra white spaces
docs <- tm_map(docs, stripWhitespace)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing = TRUE)
d <- data.frame(word = names(v),freq = v)
head(d, 10)
svglite(file = "./cloud.svg", width = 1000, height = 1000)
#jpeg(filename = "./cloud.jpg")
set.seed(1234)
wordcloud(words = d$word, freq = d$freq, min.freq = 1,
max.words = 200, random.order = FALSE, rot.per = 0.35,
colors = brewer.pal(8, "Dark2"))
dev.off()
svglite(file = "./cloud.svg")
# Load the libraries
library("tm")
library("SnowballC")
library("wordcloud")
library("RColorBrewer")
library("stringi")
library("svglite")
# set the working directory
# first line in for windows / second line is for GNU/Linux
setwd("E://backup_data_files/JavaProjects/poleEmploi/ressources/")
#setwd("/mnt/e/backup_data_files/JavaProjects/poleEmploi/ressources/")
# read the words file
filePath <- ("./words.txt")
text <- readLines(filePath)
# Load the data as a corpus
# first line in for windows / second line is for GNU/Linux
corpus <- VCorpus(x = VectorSource(text), readerControl = list(reader = readPlain, language = "fr"))
#corpus <- Corpus(VectorSource(text))
docs <- tm_map(corpus, removeWords, stopwords())
toSpace <- content_transformer(function(x , pattern ) gsub(pattern, " ", x))
docs <- tm_map(docs, toSpace, "/")
docs <- tm_map(docs, toSpace, "@")
docs <- tm_map(docs, toSpace, "\\|")
# replace non-convertible bytes in the corpus with strings showing their hex codes
# also subtily convert the text to lower case
docs <- tm_map(docs, content_transformer(stri_trans_tolower))
# Remove numbers
docs <- tm_map(docs, removeNumbers)
# Remove french common stopwords
docs <- tm_map(docs, removeWords, stopwords("french"))
# Remove punctuations
docs <- tm_map(docs, removePunctuation)
# Eliminate extra white spaces
docs <- tm_map(docs, stripWhitespace)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing = TRUE)
d <- data.frame(word = names(v),freq = v)
head(d, 10)
svglite(file = "./cloud.svg")
#jpeg(filename = "./cloud.jpg")
set.seed(1234)
wordcloud(words = d$word, freq = d$freq, min.freq = 1,
max.words = 200, random.order = FALSE, rot.per = 0.35,
colors = brewer.pal(8, "Dark2"))
dev.off()
